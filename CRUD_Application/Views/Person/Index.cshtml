@model IEnumerable<PersonResponse>
@{
    ViewData["Title"] = "Home";
    int counter = 1;
}

<h1 class="h3 text-center p-2">Persons list</h1>
<hr class="border border-1 border-secondary m-0">
<div class="bg-body-secondary border border-secondary rounded my-3 p-3 container m-auto shadow">
    <form asp-controller="Persons" asp-action="Index" method="get" class="d-flex justify-content-around flex-md-row flex-column">
        <select name="searchBy" class="form-select d-md-inline w-auto flex-grow-1">
            <option value=" " selected disabled>Search By</option>
            @foreach (KeyValuePair<string, string> search in ViewBag.searchList)
            {
                @if (search.Value == ViewBag.searchBy)
                {
                    <option value="@search.Value" selected>@search.Key</option>
                }
                else
                {
                    <option value="@search.Value">@search.Key</option>
                }
            }
        </select>
        <input type="text" class="form-control d-md-inline w-auto flex-grow-1 mx-md-3" placeholder="search ..." name="searchString" value="@ViewBag.searchstring">
        <div class="btn-group">
            <button type="submit" class="btn btn-primary me-1 rounded">Sreach</button>
            <a asp-controller="Person" asp-action="Index" class="btn text-danger border-0 rounded">clear all</a>
        </div>
    </form>
</div>

<div class="table-responsive-md">
    <table class="table table-bordered">
        <thead>
            <tr class="table-success">
                <th scope="col">#</th>

                @await Html.PartialAsync("_GridcolumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.PersonName)},
                {"DisplayName", "Person Name"}})

                @await Html.PartialAsync("_GridcolumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Email)},
                {"DisplayName", "Email"}})

                @await Html.PartialAsync("_GridcolumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.DateOfBirth)},
                {"DisplayName", "Date of Birth"}})

                @await Html.PartialAsync("_GridcolumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Age)},
                {"DisplayName", "Age"}})

                @await Html.PartialAsync("_GridcolumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Gender)},
                {"DisplayName", "Gender"}})

                @await Html.PartialAsync("_GridcolumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Country)},
                {"DisplayName", "Country"}})

                @await Html.PartialAsync("_GridcolumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.Address)},
                {"DisplayName", "Address"}})

                @await Html.PartialAsync("_GridcolumnHeader", new ViewDataDictionary(ViewData){
                {"ColumnName", nameof(PersonResponse.ReceiveNewsLetters)},
                {"DisplayName", "Receive News Letters"}})

                <th scope="col">Options</th>
            </tr>
        </thead>
        <tbody>
            @foreach (PersonResponse person in Model)
            {
                <tr>
                    <th scope="row">@counter</th>
                    <td>@person.PersonName</td>
                    <td>@person.Email</td>
                    <td>@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                    <td>@person.Age</td>
                    <td>@person.Gender</td>
                    <td>@person.Country</td>
                    <td>@person.Address</td>
                    <td>@person.ReceiveNewsLetters</td>
                    <td>
                        <div class="btn-group btn-group-sm">
                            <a class="btn btn-outline-warning me-1 rounded" asp-controller="Person" asp-action="Edit" asp-route-personID="@person.PersonID" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Edit">
                                <i class="bi-pencil-fill"></i>
                            </a>
                            <a class="btn btn-outline-danger rounded" asp-controller="Person" asp-action="Delete" asp-route-personID="@person.PersonID" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Delete">
                                <i class="bi-trash-fill"></i>
                            </a>
                        </div>
                    </td>
                </tr>
                counter++;
            }
        </tbody>
    </table>
</div>
@section scripts{
    <script>
        const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
    </script>
}